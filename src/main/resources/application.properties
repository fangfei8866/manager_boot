#激活dev环境
spring.profiles.active=dev
#开启CGLIB动态代理模式
spring.aop.proxy-target-class=true
#配置tomcat的端口
server.port=80
#server.tomcat.accesslog.enabled=true
#server.tomcat.accesslog.directory=E:/logs/log
#配置默认的验证失效
security.basic.enabled=false
#配置logging
#logging.file=app.log
logging.level.org.springframework=info
logging.level.org.springframework.scheduling=INFO
#logging.level.org.springboot=TRACE
logging.level.com.zhang=debug
# 配置静态资源的访问url 正则.
spring.mvc.static-path-pattern=/static/**

######################rabbitmq#########################
spring.rabbitmq.host=192.168.6.223
spring.rabbitmq.port=5672
spring.rabbitmq.username=manager
spring.rabbitmq.password=123456
spring.rabbitmq.virtual-host=/manager

########################################################
###mail setting
########################################################
# 设置邮箱主机
spring.mail.host=smtp.ym.163.com
spring.mail.port=25
# 设置用户名
spring.mail.username=ccs163@ccs163.com
# 设置密码
spring.mail.password=ccs163
# 设置是否需要认证，如果为true,那么用户名和密码就必须的，
#如果设置false，可以不设置用户名和密码，当然也得看你的对接的平台是否支持无密码进行访问的。
spring.mail.properties.mail.smtp.auth=true
# STARTTLS[1]  是对纯文本通信协议的扩展。它提供一种方式将纯文本连接升级为加密连接（TLS或SSL），而不是另外使用一个端口作加密通信。
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true



#自定义的属性 在MyProperities中访问 test
mypty.xifu=nana

########################################################
###datasource
########################################################
# 数据库访问配置
# 主数据源，默认的
master.datasource.type=com.alibaba.druid.pool.DruidDataSource
master.datasource.driverClassName=com.mysql.jdbc.Driver
master.datasource.url = jdbc:mysql://server1:3306/template?useUnicode=true&characterEncoding=utf8
master.datasource.username = root
master.datasource.password = 123456
# 初始化大小，最小，最大
master.datasource.initialSize=5
master.datasource.minIdle=5
master.datasource.maxActive=20
# 配置获取连接等待超时的时间
master.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 
master.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒 
master.datasource.minEvictableIdleTimeMillis=300000
master.datasource.validationQuery=SELECT 1
master.datasource.testWhileIdle=true
master.datasource.testOnBorrow=false
master.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小 
master.datasource.poolPreparedStatements=true
master.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 
master.datasource.filters=stat,wall,log4j,config
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
master.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;config.decrypt=false


#从数据源
slave.datasource.names=ds1
slave1.datasource.type=com.alibaba.druid.pool.DruidDataSource
slave1.datasource.driverClassName =com.mysql.jdbc.Driver
slave1.datasource.url=jdbc:mysql://server3:3306/template?useUnicode=true&characterEncoding=utf8
slave1.datasource.username=slaveroot
slave1.datasource.password=123456
# 初始化大小，最小，最大
slave1.datasource.initialSize=5
slave1.datasource.minIdle=5
slave1.datasource.maxActive=20
# 配置获取连接等待超时的时间
slave1.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 
slave1.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒 
slave1.datasource.minEvictableIdleTimeMillis=300000
slave1.datasource.validationQuery=SELECT 1
slave1.datasource.testWhileIdle=true
slave1.datasource.testOnBorrow=false
slave1.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小 
slave1.datasource.poolPreparedStatements=true
slave1.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 
slave1.datasource.filters=stat,wall,log4j,config
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
slave1.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;config.decrypt=false



 
#mybatis
mybatis.type-aliases-package=com.zhang.po
mybatis.mapper-locations=classpath:mapper/*.xml
#mappers 多个接口时逗号隔开
mapper.mappers=com.zhang.utils.MyMapper
mapper.not-empty=false
mapper.identity=MYSQL

#pagehelper
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql


########################################################
###REDIS (RedisProperties) redis基本配置；
########################################################
# database name
spring.redis.database=0
# server host1
spring.redis.host=192.168.6.223
# server password
spring.redis.password=123456
#connection port
spring.redis.port=6379
# pool settings ...
spring.redis.pool.max-idle=8
spring.redis.pool.min-idle=0
spring.redis.pool.max-active=8
# 表示当borrow(引入)一个jedis实例时，最大的等待时间，如果超过等待时间(毫秒)，则直接抛出JedisConnectionException； 
spring.redis.pool.max-wait=3000
 
########################################################
###THYMELEAF (ThymeleafAutoConfiguration)
########################################################
spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html
#spring.thymeleaf.mode=HTML5
#spring.thymeleaf.encoding=UTF-8
# ;charset=<encoding> is added
#spring.thymeleaf.content-type=text/html
# set to false for hot refresh
spring.thymeleaf.cache=false


########################################################
###自定义属性的设置
########################################################
system.zookeeper.connections=server1:2181,server3:2181,server4:2181
system.zookeeper.redisbathpath=/redis
system.zookeeper.readWrite=/readwrite
#是否启用数据库读写分离
system.readWrite.enable=true
#是否启用redis缓存
system.cache.enable=true
#是否启用默认有效时间
system.cache.expire.default.enable=true
#缓存默认有效时间  
system.cache.expire.default.seconds=3600